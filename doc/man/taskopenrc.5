'\" t
.\" Automatically generated by Pandoc 2.18
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "taskopenrc" "5" "" "Taskopen User Manual" "Version 2.0"
.hy
.SH NAME
.PP
taskopenrc - Configuration file for the \f[B]taskopen\f[R](1) command
.SH SYNOPSIS
.PP
\f[V]\[ti]/.taskopenrc\f[R]
.PP
\f[V]\[ti]/.config/taskopen/taskopenrc\f[R]
.PP
\f[V]\[ti]/$XDG_CONFIG_HOME/taskopen/taskopenrc\f[R]
.PP
\f[V]$TASKOPENRC\f[R]
.PP
\f[V]taskopen -c /path/to/taskopenrc\f[R]
.SH DESCRIPTION
.PP
\f[B]taskopen\f[R] obtains its configuration data from a taskopenrc file
from any of the locations above.
.PP
Since version 2.0, taskopen follows a \f[V].ini\f[R]-style configuration
syntax with sections, e.g.:
.IP
.nf
\f[C]
[Section]
key=value
\f[R]
.fi
.PP
The config file defines the settings and actions for taskopen.
Undefined settings may be derived from environment variables
(e.g.\ \f[V]$EDITOR\f[R]).
Command line arguments always take precedence over the config file and
environment variables.
.PP
The config file contains three sections specified below: General,
Actions and CLI.
.SS Section: General
.PP
This section defines general (default) settings of taskopen.
The following keys are available in this section and where already
present in the perl version of taskopen.
.IP
.nf
\f[C]
[General]
EDITOR = vim
path_ext = /usr/share/taskopen/scripts
taskbin = task
no_annotation_hook = addnote
task_attributes = \[dq]priority,project,tags,description\[dq]
\f[R]
.fi
.PP
Note that the config file can be used to specify defaults for any
command line option of taskopen, e.g.:
.IP
.nf
\f[C]
[General]
--sort = \[dq]urgency-,label+,annot+\[dq]
--active-tasks = \[dq]status.is:pending\[dq]
--debug = 0
\f[R]
.fi
.SS Section: Actions
.PP
This section specifies the actions as described \f[B]taskopen\f[R](1).
An action consists of a name, a regex, a target, a command, valid modes
and, optionally, a filter command, an inline command and a label regex.
.PP
In order to specify these attributes for different actions, taskopen 2.0
uses \f[V].\f[R] in the config keys as separators.
The first part then defines the name of the action,
e.g.\ \f[V]name.attribute = value\f[R].
The default values are listed below.
.IP
.nf
\f[C]
<name>.target = annotations
<name>.regex = \[dq].*\[dq]
<name>.labelregex = \[dq].*\[dq]
<name>.command = \[dq]\[dq]
<name>.modes = \[dq]normal,any,batch\[dq]
<name>.filtercommand = \[dq]\[dq]
<name>.inlinecommand = \[dq]\[dq]
\f[R]
.fi
.PP
Here is an example for specifying the default notes action from earlier
taskopen versions:
.IP
.nf
\f[C]
[Actions]
notes.regex = \[dq]Notes\[dq]
notes.command = \[dq]$EDITOR $HOME/tasknotes/$UUID.txt\[dq]
\f[R]
.fi
.PP
Another example shows how to specify commands for editing and deleting
annotations that reference non-existing files:
.IP
.nf
\f[C]
[Actions]
edit.regex = \[dq].*\[dq]
edit.command = \[dq]raw_edit $ANNOTATION\[dq]
edit.filtercommand = \[dq]test ! -e $FILE\[dq]
delete.regex = \[dq].*\[dq]
delete.command = \[dq]task $UUID denotate -- \[rs]\[dq]$ANNOTATION\[rs]\[dq]\[dq]
delete.filtercommand = \[dq]test ! -e $FILE\[dq]
\f[R]
.fi
.PP
Note that taskopen is sensitive to the order in which the actions are
specified.
This order determines the priority with which taskopen tries to apply
the actions.
This priority can be changed by using the \f[V]--include\f[R] option.
.SS Section: CLI
.PP
This section can be used to define additional subcommands for the
command line interface of taskopen.
It also allows the definition action groups that simplify referencing
multiple actions in the \f[V]--include\f[R] and \f[V]--exclude\f[R]
options (see \f[B]taskopen\f[R](1)).
.PP
As an example, we can specify subcommands as aliases for simple access
to the edit and delete actions via \f[V]taskopen edit [filter]\f[R] and
\f[V]taskopen delete [filter]\f[R], or specify a subcommand
\f[V]taskopen cleanup [filter]\f[R] that includes both:
.IP
.nf
\f[C]
[CLI]
alias.edit = \[dq]normal --include=edit\[dq]
alias.delete = \[dq]normal --include=delete\[dq]
alias.cleanup = \[dq]any --include=edit,delete\[dq]
\f[R]
.fi
.PP
Regarding grouping, we can, e.g., define a group \f[I]cleanup\f[R] to
combine the edit and delete action:
.IP
.nf
\f[C]
[CLI]
group.cleanup = \[dq]edit,delete\[dq]
\f[R]
.fi
.PP
By doing this, we can type \f[V]taskopen --include=cleanup\f[R] instead
of \f[V]taskopen --include=edit,delete\f[R].
.PP
Moreover, the default subcommand can be changed:
.IP
.nf
\f[C]
[CLI]
default = any
\f[R]
.fi
.PP
Note that aliases can be used as default subcommand.
Yet, any \f[V]--config\f[R] within an aliases that is used as a default
will be ignored.
.SS Environment variables
.PP
Taskopen evaluates the following environment variables to determine
default settings for some config keys.
.IP \[bu] 2
\f[V]$TASKOPENRC\f[R]: Overrides the default location
(\f[V]$HOME/.taskopenrc\f[R]) of the config file.
.SH MIGRATION
.PP
This sections lists examples of how old taskopen settings from before
version 2.0 are converted into the new configuration format.
Note that the general settings only need to be converted into lower
case.
.PP
.TS
tab(@);
lw(34.4n) lw(35.6n).
T{
Taskopen 1.x config variable
T}@T{
Taskopen 2.0 config variable
T}
_
T{
\f[V]EDITOR\f[R]
T}@T{
\f[V]EDITOR\f[R]
T}
T{
\f[V]TASK_BIN\f[R]
T}@T{
\f[V]task_bin\f[R]
T}
T{
\f[V]PATH_EXT\f[R]
T}@T{
\f[V]path_ext\f[R]
T}
T{
\f[V]DEBUG\f[R]
T}@T{
\f[V]--debug\f[R]
T}
T{
\f[V]NO_ANNOTATION_HOOK\f[R]
T}@T{
\f[V]no_annotation_hook\f[R]
T}
T{
\f[V]TASK_ATTRIBUTES\f[R]
T}@T{
\f[V]task_attributes\f[R]
T}
T{
\f[V]DEFAULT_FILTER\f[R]
T}@T{
\f[V]--active-tasks\f[R]
T}
T{
\f[V]DEFAULT_SORT\f[R]
T}@T{
\f[V]--sort\f[R]
T}
T{
\f[V]BROWSER\f[R], \f[V]BROWSER_REGEX\f[R]
T}@T{
defined in custom action
T}
T{
\f[V]FILE_CMD\f[R], \f[V]FILE_REGEX\f[R]
T}@T{
defined in custom action
T}
T{
\f[V]NOTES_FOLDER\f[R], \f[V]NOTES_EXT\f[R], \f[V]NOTES_FILE\f[R],
\f[V]NOTES_CMD\f[R], \f[V]NOTES_REGEX\f[R]
T}@T{
defined in custom action
T}
T{
\f[V]TEXT_REGEX\f[R]
T}@T{
defined in custom action
T}
T{
\f[V]CUSTOM[0-9]+_REGEX\f[R], \f[V]CUSTOM[0-9]+_CMD\f[R]
T}@T{
defined in custom action
T}
T{
\f[V]DEFAULT-i\f[R]
T}@T{
via action or alias
T}
T{
\f[V]DEFAULT-x\f[R]
T}@T{
via action or alias
T}
.TE
.SH CREDITS & COPYRIGHTS
.PP
Copyright (C) 2010 - 2022, J.
Schlatow
.PP
Taskopen is distributed under the GNU General Public License.
See \f[I]http://www.opensource.org/licenses/gpl-2.0.php\f[R] for more
information.
.PP
Please also refer to the \f[B]AUTHORS\f[R] file for a list of
contributors.
.SH SEE ALSO
.PP
\f[B]taskopen\f[R](1)
.PP
For more information regarding taskopen, see the following:
.TP
The official site at
\f[I]<https://github.com/jschlatow/taskopen/>\f[R]
.TP
The official code repository at
\f[I]<git://github.com/jschlatow/taskopen.git>\f[R]
.TP
The wiki at
\f[I]<git://github.com/jschlatow/taskopen.git/wiki>\f[R]
.SH REPORTING BUGS
.TP
Bugs in taskopen may be reported to the issue-tracker at
\f[I]<https://github.com/jschlatow/taskopen/issues>\f[R]
